#!/bin/sh

#set -x

usage() {
	echo "Usage: $(basename $0) [--help] [--output=<path>] [--live]"
	echo
	echo "    --help: this help message"
	echo "    --output=<path>: output directory for image files."
	echo "    --live: enforce to build live boot system image."
	echo "    --compress: compress the final OS image using 'xz'."
	echo "    --keep-builddir: prevent removing temporary directory"
	echo "                     after building an image."
	exit 1
}

[ -z "$1" ] || CUSTOMOS=${1}

ODROID_STAMPER_DIR="/usr/share/odroid-stamper"

TOPDIR=${ODROID_STAMPER_CHECKOUT:-${ODROID_STAMPER_DIR}}
WORKDIR=$PWD
RUN_MENU=true
INTERNAL=${INTERNAL:-false}

DEFAULT_CONFIG=${WORKDIR}/.config

download_dir="/var/cache/odroid-stamper/downloads"

for opt in "$@"; do
	case $opt in
		--help)
			usage
			;;
		--output=*)
			out_dir="${opt#*=}"
			;;

		--no-live)	opt_livesystem=false;;
		--live)		opt_livesystem=true;;
		--compress)	opt_compress=true;;
		--internal)	opt_internal=true;;
		--keep-builddir)
				opt_keep_builddir=true;;
	esac
done

[ "x${out_dir}" = "x" ] && out_dir=${WORKDIR}
build_dir="${out_dir}/BUILD"

. ${TOPDIR}/menu
. ${TOPDIR}/default
. ${TOPDIR}/functions

if [ -f ${TOPDIR}/custom/${CUSTOMOS}/config ]; then
	cp -f ${TOPDIR}/custom/${CUSTOMOS}/config ${DEFAULT_CONFIG} || exit 1
	RUN_MENU=false
fi

if [ ! -f ${DEFAULT_CONFIG} ]; then
    default_config ${DEFAULT_CONFIG}
fi

. ${DEFAULT_CONFIG}

[ "x${opt_livesystem}" = "xtrue" ] && LIVESYSTEM=true
[ "x${opt_compress}" = "xtrue" ] && COMPRESS=true
[ "x${opt_internal}" = "xtrue" ] && INTERNAL=true

[ "${RUN_MENU}" = "true" ] && do_menu
[ "x${ISOIMAGE}" = "xtrue" ] && LIVESYSTEM=true

[ "x${IMAGE_FILE}" = "x" ] && IMAGE_FILE=$(image_file ${DISTRO} ${FLAVOUR} ${BOARD})
OUTFILE=${out_dir}/${IMAGE_FILE}

[ -f ${TOPDIR}/distro/${DISTRO}/${FLAVOUR}/functions ] && \
	. ${TOPDIR}/distro/${DISTRO}/${FLAVOUR}/functions
. ${TOPDIR}/boards/${BOARD}/functions
if [ -f ${TOPDIR}/custom/${CUSTOMOS}/functions ]; then
	. ${TOPDIR}/custom/${CUSTOMOS}/functions
fi

trap "trap_ctrlc" 2
trap "cleanup" 0
trap "panic" 1 3 15

[ "x${TARGET_DEVCIE}" = "x" ] && TARGET_DEVICE=${out_dir}/binary.img

do_custom_installer ${download_dir} ${out_dir}

# vim: set ft=sh ts=4 sw=4 expandtab
